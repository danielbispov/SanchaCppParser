package lexico;/* Generated By:JavaCC: Do not edit this line. AnalisadorLexicoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalisadorLexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DIGITO = 1;
  /** RegularExpression Id. */
  int NUMEROINTEIRO = 2;
  /** RegularExpression Id. */
  int NUMEROREAL = 3;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 4;
  /** RegularExpression Id. */
  int CARACTER = 5;
  /** RegularExpression Id. */
  int REAL = 6;
  /** RegularExpression Id. */
  int INTEIRO = 7;
  /** RegularExpression Id. */
  int VAZIO = 8;
  /** RegularExpression Id. */
  int EFAZER = 9;
  /** RegularExpression Id. */
  int EPARA = 10;
  /** RegularExpression Id. */
  int ESE = 11;
  /** RegularExpression Id. */
  int ESENAO = 12;
  /** RegularExpression Id. */
  int ERETORNO = 13;
  /** RegularExpression Id. */
  int PADRAO = 14;
  /** RegularExpression Id. */
  int QUEBRAR = 15;
  /** RegularExpression Id. */
  int CASO = 16;
  /** RegularExpression Id. */
  int EESCOLHA = 17;
  /** RegularExpression Id. */
  int EENQUANTO = 18;
  /** RegularExpression Id. */
  int VERDADEIRO = 19;
  /** RegularExpression Id. */
  int FALSO = 20;
  /** RegularExpression Id. */
  int ECHAVE = 21;
  /** RegularExpression Id. */
  int DCHAVE = 22;
  /** RegularExpression Id. */
  int EPARENTESE = 23;
  /** RegularExpression Id. */
  int DPARENTESE = 24;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 25;
  /** RegularExpression Id. */
  int DOISPONTOS = 26;
  /** RegularExpression Id. */
  int VIRGULA = 27;
  /** RegularExpression Id. */
  int IGUAL = 28;
  /** RegularExpression Id. */
  int OULOGICO = 29;
  /** RegularExpression Id. */
  int ELOGICO = 30;
  /** RegularExpression Id. */
  int IGUALIGUAL = 31;
  /** RegularExpression Id. */
  int DIFERENTE = 32;
  /** RegularExpression Id. */
  int MENOR = 33;
  /** RegularExpression Id. */
  int MAIOR = 34;
  /** RegularExpression Id. */
  int MENORIGUAL = 35;
  /** RegularExpression Id. */
  int MAIORIGUAL = 36;
  /** RegularExpression Id. */
  int MAIS = 37;
  /** RegularExpression Id. */
  int MENOS = 38;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 39;
  /** RegularExpression Id. */
  int DIVISAO = 40;
  /** RegularExpression Id. */
  int INCREMENTA = 41;
  /** RegularExpression Id. */
  int DECREMENTA = 42;
  /** RegularExpression Id. */
  int MENORMENOR = 43;
  /** RegularExpression Id. */
  int MAIORMAIOR = 44;
  /** RegularExpression Id. */
  int ASPAS = 45;
  /** RegularExpression Id. */
  int LEXEMAS_INVALIDOS = 57;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO_LINHA = 1;
  /** Lexical state. */
  int COMENTARIO_BLOCO = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<DIGITO>",
    "<NUMEROINTEIRO>",
    "<NUMEROREAL>",
    "<IDENTIFICADOR>",
    "\"char\"",
    "\"float\"",
    "\"int\"",
    "\"void\"",
    "\"do\"",
    "\"for\"",
    "\"if\"",
    "\"else\"",
    "\"return\"",
    "\"default\"",
    "\"break\"",
    "\"case\"",
    "\"switch\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"=\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"<<\"",
    "\">>\"",
    "\"\\\"\"",
    "\" \"",
    "\"#\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"//\"",
    "\"/*\"",
    "\"//\"",
    "<token of kind 54>",
    "\"*/\"",
    "<token of kind 56>",
    "<LEXEMAS_INVALIDOS>",
  };

}
