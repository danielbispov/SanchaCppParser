/* Generated By:JavaCC: Do not edit this line. lexicalAnalyzerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface lexicalAnalyzerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CARACTER = 1;
  /** RegularExpression Id. */
  int CONSTANTE = 2;
  /** RegularExpression Id. */
  int FAZER = 3;
  /** RegularExpression Id. */
  int DOBRO = 4;
  /** RegularExpression Id. */
  int SENAO = 5;
  /** RegularExpression Id. */
  int REAL = 6;
  /** RegularExpression Id. */
  int PARA = 7;
  /** RegularExpression Id. */
  int SE = 8;
  /** RegularExpression Id. */
  int INTEIRO = 9;
  /** RegularExpression Id. */
  int RETORNO = 10;
  /** RegularExpression Id. */
  int CASO = 11;
  /** RegularExpression Id. */
  int ESCOLHA = 12;
  /** RegularExpression Id. */
  int VAZIO = 13;
  /** RegularExpression Id. */
  int ENQUANTO = 14;
  /** RegularExpression Id. */
  int VERDADEIRO = 15;
  /** RegularExpression Id. */
  int FALSO = 16;
  /** RegularExpression Id. */
  int ECHAVE = 17;
  /** RegularExpression Id. */
  int DCHAVE = 18;
  /** RegularExpression Id. */
  int EPARENTESE = 19;
  /** RegularExpression Id. */
  int DPARENTESE = 20;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 21;
  /** RegularExpression Id. */
  int IGUAL = 22;
  /** RegularExpression Id. */
  int MULTIPLICAIGUAL = 23;
  /** RegularExpression Id. */
  int DIVIDEIGUAL = 24;
  /** RegularExpression Id. */
  int MODULOIGUAL = 25;
  /** RegularExpression Id. */
  int SOMAIGUAL = 26;
  /** RegularExpression Id. */
  int MENOSIGUAL = 27;
  /** RegularExpression Id. */
  int OULOGICO = 28;
  /** RegularExpression Id. */
  int ELOGICO = 29;
  /** RegularExpression Id. */
  int IGUALIGUAL = 30;
  /** RegularExpression Id. */
  int DIFERENTE = 31;
  /** RegularExpression Id. */
  int MENOR = 32;
  /** RegularExpression Id. */
  int MAIOR = 33;
  /** RegularExpression Id. */
  int MENORIGUAL = 34;
  /** RegularExpression Id. */
  int MAIORIGUAL = 35;
  /** RegularExpression Id. */
  int MAIS = 36;
  /** RegularExpression Id. */
  int MENOS = 37;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 38;
  /** RegularExpression Id. */
  int DIVISAO = 39;
  /** RegularExpression Id. */
  int MODULO = 40;
  /** RegularExpression Id. */
  int INCREMENTA = 41;
  /** RegularExpression Id. */
  int DECREMENTA = 42;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO_LINHA = 1;
  /** Lexical state. */
  int COMENTARIO_BLOCO = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"char\"",
    "\"const\"",
    "\"do\"",
    "\"double\"",
    "\"else\"",
    "\"float\"",
    "\"for\"",
    "\"if\"",
    "\"int\"",
    "\"return\"",
    "\"case\"",
    "\"switch\"",
    "\"void\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"+=\"",
    "\"-=\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"//\"",
    "\"/*\"",
    "\"\\n\"",
    "\"*/\"",
  };

}
