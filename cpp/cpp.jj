/**
* Copyright @ DARO Analyzer
*
* Corporation: Minerva Project
* Date: 12/13/16
* Authors: Allex Lima      http://allexlima.com
*          Daniel Bispo
*          Paulo Moraes    http://pauloigormoraes.com
*          Renan Barroncas
*
* VERSION 1
*/

options {

  STATIC = true;
  OUTPUT_DIRECTORY = "output/";

}

PARSER_BEGIN(analisadorLexico)

public class analisadorLexico {

  public static void main (String[] args) {
    System.out.println("CÃ³digo Java");
  }

}

PARSER_END(analisadorLexico)

TOKEN : {
    < INICIO: <ATRIBUICAO> <PONTOVIRGULA> | <REPETICAO> | <FUNCAO> | <SE> >
}

TOKEN : {
    < #ATRIBUICAO : <TIPO> <IDENTIFICADOR> <IGUAL> <EXPRESSAO>
                  | <TIPO> <IDENTIFICADOR>
                  | <IDENTIFICADOR> <IGUAL> <EXPRESSAO>
                  | <IDENTIFICADOR>
                  | <IDENTIFICADOR> <INCREMENTA>
                  | <IDENTIFICADOR> <DECREMENTA>
    >
  | < #EXPRESSAO : <NUMERO> <MAIS> <EXPRESSAO>
                  | <NUMERO> <MENOS> <EXPRESSAO>
                  | <NUMERO> <MULTIPLICACAO> <EXPRESSAO>
                  | <NUMERO> <DIVISAO> <EXPRESSAO>
                  | <EPARENTESE> <EXPRESSAO> <DPARENTESE>
	                | <NUMERO>
    >
}

TOKEN : {
  < #REPETICAO : <PARA>
             | <FACAENQUANTO>
             | <ENQUANTO>
             | <ESCOLHA>
  >
  | < #PARA : <EPARA> <EPARENTESE> <ATRIBUICAO> <PONTOVIRGULA> <CONDICAO> <PONTOVIRGULA> <ATRIBUICAO> <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE> >
  | < #FACAENQUANTO : <EFAZER> <ECHAVE> <BLOCO> <DCHAVE> <EENQUANTO> <EPARENTESE> <CONDICAO> <DPARENTESE> >
  | < #ENQUANTO : <EENQUANTO> <EPARENTESE> <CONDICAO> <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE> >
  | < #ESCOLHA : <EESCOLHA> <EPARENTESE> <CONDICAO> <DPARENTESE> <ECHAVE> <ESCAUX> <DCHAVE> >

}

TOKEN : {
  < #FUNCAO : <TIPO> <IDENTIFICADOR> <EPARENTESE> <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE>
          | <TIPO> <IDENTIFICADOR> <EPARENTESE> <ATRIBUICAO> (<VIRGULA> <ATRIBUICAO>)+ <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE>
  >
}

TOKEN : {
  < #SE : <ESE> <EPARENTESE> <CONDICAO> <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE>
      | <ESE> <EPARENTESE> <CONDICAO> <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE> <ESENAO> <ECHAVE> <BLOCO> <DCHAVE>
      | <ESE> <EPARENTESE> <CONDICAO> <DPARENTESE> <ECHAVE> <BLOCO> <DCHAVE> <ESENAO> <SE>
  >
}

TOKEN : {
  < #CONDICAO : <ATCOND> <MAIOR> <ATCOND>
              | <ATCOND> <MENOR> <ATCOND>
              | <ATCOND> <IGUALIGUAL> <ATCOND>
              | <ATCOND> <MAIORIGUAL> <ATCOND>
              | <ATCOND> <MENORIGUAL> <ATCOND>
              | <ATCOND> <DIFERENTE> <ATCOND>
              | <ATCOND>
              | (<EPARENTESE> <CONDICAO> <DPARENTESE> (<LOGICO> <CONDICAO>)+)
  >
}

TOKEN : {
      < #CINTEIRO : ["1"-"9"] (["0"-"9"])* >
    | < #CREAL : (["0"-"9"])+ "." (["0"-"9"])* | (["0"-"9"])* "." (["0"-"9"])+ >
    | < #ESCAUX : (<CASO> <CINTEIRO> <DOISPONTOS> <BLOCO>)+
                | <PADRAO> <DOISPONTOS> <BLOCO> >
    | < IDENTIFICADOR: (["n","t","b","r","f","\\","'","\""]
                       | ["0"-"7"] ( ["0"-"7"] )?
                       | ["0"-"3"] ["0"-"7"] ["0"-"7"] )* >
    | < #TIPO : <INTEIRO> | <REAL> | <CARACTER> | <VAZIO> >
    | < #LOGICO : <ELOGICO> | <OULOGICO> >
    | < #ATCOND : <IDENTIFICADOR>
                | <NUMERO>
                | <VERDADEIRO>
                | <FALSO> >
    | < #NUMERO : <CINTEIRO> | <CREAL> >
    | < #BLOCO : <ATRIBUICAO> <PONTOVIRGULA>
               | <ERETORNO> <RETURNO> <PONTOVIRGULA>
               | <QUEBRAR> <PONTOVIRGULA> >
    | < #RETURNO: <IDENTIFICADOR> | <EXPRESSAO> >
}

TOKEN : {
    < #CARACTER: "char" >
  | < #REAL: "float" >
  | < #INTEIRO: "int" >
  | < #VAZIO: "void" >
  | < #EFAZER: "do" >
  | < #ESENAO: "else" >
  | < #EPARA: "for" >
  | < #ESE: "if" >
  | < #ERETORNO: "return" >
  | < #PADRAO: "default">
  | < #QUEBRAR: "break">
  | < #CASO: "case" >
  | < #EESCOLHA: "switch" >
  | < #EENQUANTO: "while" >
  | < #VERDADEIRO: "true" >
  | < #FALSO: "false" >
}

TOKEN : {
    < #ECHAVE: "{" >
  | < #DCHAVE: "}" >
  | < #EPARENTESE: "(" >
  | < #DPARENTESE: ")" >
  | < #PONTOVIRGULA: ";" >
  | < #DOISPONTOS: ":">
  | < #VIRGULA: ",">
  | < #IGUAL: "=" >
  | < #MULTIPLICAIGUAL: "*=" >
  | < #DIVIDEIGUAL: "/=" >
  | < #OULOGICO: "||" >
  | < #ELOGICO: "&&" >
  | < #IGUALIGUAL: "==" >
  | < #DIFERENTE: "!=" >
  | < #MENOR: "<" >
  | < #MAIOR: ">" >
  | < #MENORIGUAL: "<=" >
  | < #MAIORIGUAL: ">=" >
  | < #MAIS: "+" >
  | < #MENOS: "-" >
  | < #MULTIPLICACAO: "*" >
  | < #DIVISAO: "/" >
  | < #INCREMENTA: "++" >
  | < #DECREMENTA: "--" >
}

SKIP : {
  " "
  | "\t"
  | "\n"
  | "//" : COMENTARIO_LINHA
  | "/*" : COMENTARIO_BLOCO
}

<COMENTARIO_LINHA> SKIP: {
  "//" : DEFAULT
}

<COMENTARIO_BLOCO> SKIP: {
  "*/" : DEFAULT
}
