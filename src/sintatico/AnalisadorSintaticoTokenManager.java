/* Generated By:JavaCC: Do not edit this line. AnalisadorSintaticoTokenManager.java */
package sintatico;
import java.io.*;

/** Token Manager. */
public class AnalisadorSintaticoTokenManager implements AnalisadorSintaticoConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 47:
         return jjMoveStringLiteralDfa1_1(0x40000000000000L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(1, 54);
         break;
      default :
         return 2;
   }
   return 2;
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 21;
            return 61;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 21;
            return 62;
         }
         if ((active0 & 0x1002L) != 0L)
         {
            jjmatchedKind = 21;
            return 63;
         }
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 21;
            return 64;
         }
         if ((active0 & 0xa00L) != 0L)
         {
            jjmatchedKind = 21;
            return 65;
         }
         if ((active0 & 0x10048L) != 0L)
         {
            jjmatchedKind = 21;
            return 66;
         }
         if ((active0 & 0x2c0000000L) != 0L)
         {
            jjmatchedKind = 57;
            return 67;
         }
         if ((active0 & 0x8000000L) != 0L)
            return 67;
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 21;
            return 68;
         }
         if ((active0 & 0x420L) != 0L)
         {
            jjmatchedKind = 21;
            return 69;
         }
         if ((active0 & 0x84L) != 0L)
         {
            jjmatchedKind = 21;
            return 70;
         }
         if ((active0 & 0x10L) != 0L)
         {
            jjmatchedKind = 21;
            return 71;
         }
         if ((active0 & 0x3ffffd37c00000L) != 0L)
            return 72;
         return -1;
      case 1:
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 41;
         }
         if ((active0 & 0x80L) != 0L)
            return 73;
         if ((active0 & 0x1000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 74;
         }
         if ((active0 & 0x2L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 8;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 75;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 37;
         }
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 4;
         }
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 76;
         }
         if ((active0 & 0x8L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 18;
         }
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 77;
         }
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 30;
         }
         if ((active0 & 0x10L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 78;
         }
         if ((active0 & 0x2404L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
            return 73;
         }
         if ((active0 & 0x20L) != 0L)
            return 79;
         if ((active0 & 0xc0000000L) != 0L)
            return 23;
         return -1;
      case 2:
         if ((active0 & 0x44L) != 0L)
            return 73;
         if ((active0 & 0x1ff1aL) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 2;
            return 73;
         }
         return -1;
      case 3:
         if ((active0 & 0x16c08L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
            return 73;
         }
         if ((active0 & 0x9312L) != 0L)
            return 73;
         return -1;
      case 4:
         if ((active0 & 0x2400L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 4;
            return 73;
         }
         if ((active0 & 0x14808L) != 0L)
            return 73;
         return -1;
      case 5:
         if ((active0 & 0x2000L) != 0L)
            return 73;
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 5;
            return 73;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_0(0, 49, 72);
      case 10:
         return jjStartNfaWithStates_0(0, 50, 72);
      case 13:
         return jjStartNfaWithStates_0(0, 51, 72);
      case 32:
         return jjStartNfaWithStates_0(0, 47, 72);
      case 33:
         return jjMoveStringLiteralDfa1_0(0x200000000L);
      case 34:
         return jjStartNfaWithStates_0(0, 46, 72);
      case 35:
         return jjStartNfaWithStates_0(0, 48, 72);
      case 38:
         return jjMoveStringLiteralDfa1_0(0x80000000L);
      case 40:
         return jjStartNfaWithStates_0(0, 24, 72);
      case 41:
         return jjStartNfaWithStates_0(0, 25, 72);
      case 42:
         return jjStartNfaWithStates_0(0, 40, 72);
      case 43:
         jjmatchedKind = 38;
         return jjMoveStringLiteralDfa1_0(0x40000000000L);
      case 44:
         return jjStartNfaWithStates_0(0, 28, 72);
      case 45:
         jjmatchedKind = 39;
         return jjMoveStringLiteralDfa1_0(0x80000000000L);
      case 47:
         jjmatchedKind = 41;
         return jjMoveStringLiteralDfa1_0(0x30000000000000L);
      case 58:
         return jjStartNfaWithStates_0(0, 27, 67);
      case 59:
         return jjStartNfaWithStates_0(0, 26, 72);
      case 60:
         jjmatchedKind = 34;
         return jjMoveStringLiteralDfa1_0(0x101000000000L);
      case 61:
         jjmatchedKind = 29;
         return jjMoveStringLiteralDfa1_0(0x100000000L);
      case 62:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_0(0x202000000000L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0xa00L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x1002L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x420L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x100L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x10048L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x84L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x2000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x8000L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x10L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x4000L);
      case 123:
         return jjStartNfaWithStates_0(0, 22, 72);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x40000000L);
      case 125:
         return jjStartNfaWithStates_0(0, 23, 72);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(1, 31, 23);
         break;
      case 42:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 53);
         break;
      case 43:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(1, 42);
         break;
      case 45:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(1, 43);
         break;
      case 47:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 60:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(1, 44);
         break;
      case 61:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(1, 32);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(1, 33);
         else if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 36);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 37);
         break;
      case 62:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 45);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x11200L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L);
      case 102:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(1, 7, 73);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x4002L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x108L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x4L);
      case 111:
         if ((active0 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(1, 5, 79);
         return jjMoveStringLiteralDfa2_0(active0, 0x50L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x8800L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000L);
      case 124:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(1, 30, 23);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x2L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x200L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x800L);
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x6010L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x8L);
      case 114:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(2, 6, 73);
         break;
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x1100L);
      case 116:
         if ((active0 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(2, 2, 73);
         break;
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0xc08L);
      case 100:
         if ((active0 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(3, 4, 73);
         break;
      case 101:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(3, 8, 73);
         else if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(3, 12, 73);
         else if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(3, 15, 73);
         break;
      case 107:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(3, 9, 73);
         break;
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L);
      case 114:
         if ((active0 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(3, 1, 73);
         break;
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000L);
      case 101:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(4, 14, 73);
         else if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(4, 16, 73);
         break;
      case 107:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(4, 11, 73);
         break;
      case 116:
         if ((active0 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(4, 3, 73);
         break;
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 104:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 73);
         break;
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 116:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(6, 10, 73);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 61;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 79:
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  jjAddStates(0, 1);
                  jjAddStates(2, 3);
                  jjAddStates(4, 5);
                  jjAddStates(6, 7);
                  jjAddStates(8, 10);
                  jjstateSet[jjnewStateCnt++] = 20;
                  jjstateSet[jjnewStateCnt++] = 17;
                  jjstateSet[jjnewStateCnt++] = 11;
                  jjstateSet[jjnewStateCnt++] = 7;
                  jjstateSet[jjnewStateCnt++] = 3;
                  if ((0x840000f2ffffc9ffL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(23);
                  }
                  else if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 18)
                        kind = 18;
                     jjCheckNAddStates(11, 13);
                  }
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 67:
               case 23:
                  if ((0x840000f2ffffc9ffL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(23);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 6:
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 16:
                  jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 24:
                  jjAddStates(8, 10);
                  break;
               case 33:
                  jjAddStates(6, 7);
                  break;
               case 39:
                  jjAddStates(4, 5);
                  break;
               case 46:
                  jjAddStates(2, 3);
                  break;
               case 53:
                  jjAddStates(0, 1);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(11, 13);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAdd(57);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 59:
                  if (curChar == 46)
                     jjCheckNAdd(60);
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(60);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 79:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 114)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  break;
               case 71:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 30:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 117)
                     jjCheckNAdd(5);
                  break;
               case 77:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 115)
                     jjCheckNAdd(5);
                  else if (curChar == 108)
                     jjCheckNAdd(5);
                  break;
               case 73:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  break;
               case 61:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 75:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 99)
                     jjCheckNAdd(43);
                  else if (curChar == 115)
                     jjCheckNAdd(5);
                  break;
               case 74:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 99)
                     jjCheckNAdd(43);
                  else if (curChar == 108)
                     jjCheckNAdd(5);
                  break;
               case 72:
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 37:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 2:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjAddStates(0, 1);
                  if ((0xffffffefffffffffL & l) != 0L)
                     jjAddStates(2, 3);
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjAddStates(4, 5);
                  if ((0xfffffff7ffffffffL & l) != 0L)
                     jjAddStates(6, 7);
                  if ((0xffffffbfffffffffL & l) != 0L)
                     jjAddStates(8, 10);
                  if ((0xffbfffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  if ((0xffffffdfffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  if ((0xfff7ffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  if ((0xff7fffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  if ((0xffefffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  else if ((0xd0000001d0000001L & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(23);
                  }
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 65:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  break;
               case 63:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  break;
               case 68:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 76:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 70:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 69:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 64:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 18:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 115)
                     jjCheckNAdd(5);
                  break;
               case 41:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 67:
                  if ((0xd0000001d0000001L & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(23);
                  }
                  else if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 62:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 102)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  if (curChar == 111)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 78:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(1);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  if (curChar == 114)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  break;
               case 0:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(1);
                  break;
               case 3:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if (curChar == 101 && kind > 21)
                     kind = 21;
                  break;
               case 6:
                  if ((0xff7fffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 9:
                  if (curChar == 108)
                     jjCheckNAdd(5);
                  break;
               case 10:
                  if ((0xfff7ffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 14:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if (curChar == 104 && kind > 21)
                     kind = 21;
                  break;
               case 16:
                  if ((0xffffffdfffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0xffbfffffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if (curChar == 100 && kind > 21)
                     kind = 21;
                  break;
               case 23:
                  if ((0xd0000001d0000001L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(23);
                  break;
               case 24:
                  if ((0xffffffbfffffffffL & l) != 0L)
                     jjAddStates(8, 10);
                  break;
               case 25:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 26:
                  if (curChar == 108)
                     jjCheckNAdd(5);
                  break;
               case 27:
                  if (curChar == 111)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if (curChar == 114 && kind > 21)
                     kind = 21;
                  break;
               case 29:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 31:
                  if (curChar == 97)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if (curChar == 116 && kind > 21)
                     kind = 21;
                  break;
               case 33:
                  if ((0xfffffff7ffffffffL & l) != 0L)
                     jjAddStates(6, 7);
                  break;
               case 34:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 35:
                  if (curChar == 115)
                     jjCheckNAdd(5);
                  break;
               case 36:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if (curChar == 97)
                     jjCheckNAdd(28);
                  break;
               case 39:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 40:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar == 97)
                     jjCheckNAdd(43);
                  break;
               case 43:
                  if (curChar == 107 && kind > 21)
                     kind = 21;
                  break;
               case 44:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if (curChar == 99)
                     jjCheckNAdd(43);
                  break;
               case 46:
                  if ((0xffffffefffffffffL & l) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 47:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if (curChar == 108)
                     jjCheckNAdd(32);
                  break;
               case 52:
                  if (curChar == 111 && kind > 21)
                     kind = 21;
                  break;
               case 53:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 54:
                  if (curChar == 102 && kind > 21)
                     kind = 21;
                  break;
               case 55:
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(23);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(8, 10);
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(6, 7);
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(4, 5);
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(2, 3);
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 67:
               case 23:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(23);
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 16:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 24:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(8, 10);
                  break;
               case 33:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(6, 7);
                  break;
               case 39:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 46:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 53:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(0, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 61 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(0x80000000000000L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStopAtPos(1, 55);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   54, 55, 47, 52, 40, 44, 34, 36, 25, 27, 29, 57, 58, 59, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", "\143\150\141\162", "\151\156\164", "\146\154\157\141\164", 
"\166\157\151\144", "\144\157", "\146\157\162", "\151\146", "\145\154\163\145", 
"\142\141\143\153", "\144\145\146\141\165\154\164", "\142\162\145\141\153", "\143\141\163\145", 
"\163\167\151\164\143\150", "\167\150\151\154\145", "\164\162\165\145", "\146\141\154\163\145", null, null, 
null, null, null, "\173", "\175", "\50", "\51", "\73", "\72", "\54", "\75", 
"\174\174", "\46\46", "\75\75", "\41\75", "\74", "\76", "\74\75", "\76\75", "\53", "\55", 
"\52", "\57", "\53\53", "\55\55", "\74\74", "\76\76", "\42", null, null, null, null, 
null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "COMENTARIO_LINHA",
   "COMENTARIO_BLOCO",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, 1, 2, 0, 0, -1, -1, 
};
static final long[] jjtoToken = {
   0x7fffffedffffL, 
};
static final long[] jjtoSkip = {
   0x3ff800000000000L, 
};
static final long[] jjtoSpecial = {
   0x200000000000000L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[61];
private final int[] jjstateSet = new int[122];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public AnalisadorSintaticoTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public AnalisadorSintaticoTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 61; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       if (jjmatchedPos == 0 && jjmatchedKind > 56)
       {
          jjmatchedKind = 56;
       }
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 57 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
      System.err.println("Erro l\u00e9xico::: [linha #" + input_stream.getEndLine() + "] --- [token #"+image+"] n\u00e3o reconhecido.");
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
