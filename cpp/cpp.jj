/**
* Copyright @ DARO Analyzer
*
* Corporation: Minerva Project
* Date: 12/13/16
* Authors: Allex Lima      http://allexlima.com
*          Daniel Bispo
*          Paulo Moraes    http://pauloigormoraes.com
*          Renan Barroncas
*
* VERSION 1
*/

options {

  STATIC = true;
  DEBUG_LOOKAHEAD = true;
  OUTPUT_DIRECTORY = "output/";

}

PARSER_BEGIN(analisadorLexico)

import java.io.*;

public class analisadorLexico {

  public static void main (String[] args) throws ParseException, FileNotFoundException {
    SimpleCharStream arquivo = new SimpleCharStream(new FileInputStream("teste.txt"), 0, 0);
    Token token_temporario = null;
    analisadorLexicoTokenManager token_msgn = new ScannerTokenManager(arquivo);
    
  }

}

PARSER_END(analisadorLexico)

TOKEN : {
      < NUMERO : (["1"-"9"])* (["0"-"9"])+
               | (["0"-"9"])+ "." (["0"-"9"])* | (["0"-"9"])* "." (["0"-"9"])+
      >
    | < IDENTIFICADOR:   ["n","t","r","\\","'","\""]
                       | (["a"-"z","A"-"Z"])+ (["a"-"z","A"-"Z","0"-"9"])* >
}

TOKEN : {
    < CARACTER: "char" >
  | < REAL: "float" >
  | < INTEIRO: "int" >
  | < VAZIO: "void" >
  | < #EFAZER: "do" >
  | < #ESENAO: "else" >
  | < #EPARA: "for" >
  | < #ESE: "if" >
  | < #ERETORNO: "return" >
  | < #PADRAO: "default">
  | < #QUEBRAR: "break">
  | < #CASO: "case" >
  | < #EESCOLHA: "switch" >
  | < #EENQUANTO: "while" >
  | < #VERDADEIRO: "true" >
  | < #FALSO: "false" >
}

TOKEN : {
    < ECHAVE: "{" >
  | < DCHAVE: "}" >
  | < EPARENTESE: "(" >
  | < DPARENTESE: ")" >
  | < PONTOVIRGULA: ";" >
  | < DOISPONTOS: ":">
  | < VIRGULA: ",">
  | < IGUAL: "=" >
  | < MULTIPLICAIGUAL: "*=" >
  | < DIVIDEIGUAL: "/=" >
  | < OULOGICO: "||" >
  | < ELOGICO: "&&" >
  | < IGUALIGUAL: "==" >
  | < DIFERENTE: "!=" >
  | < MENOR: "<" >
  | < MAIOR: ">" >
  | < MENORIGUAL: "<=" >
  | < MAIORIGUAL: ">=" >
  | < MAIS: "+" >
  | < MENOS: "-" >
  | < MULTIPLICACAO: "*" >
  | < DIVISAO: "/" >
  | < INCREMENTA: "++" >
  | < DECREMENTA: "--" >
}

SKIP : {
    " "
  | "\t"
  | "\n"
  | "\r"
  | "//" : COMENTARIO_LINHA
  | "/*" : COMENTARIO_BLOCO
}

<COMENTARIO_LINHA> SKIP: {
  "//" : DEFAULT
}

<COMENTARIO_BLOCO> SKIP: {
  "*/" : DEFAULT
}

//Iniciando analisador sint√°tico
/*
void inicial() : {} {
    atribuicao()<PONTOVIRGULA> {}
}

void atribuicao() : {} {
  tipo() <IDENTIFICADOR>
}

void tipo() : {} {
  < #CARACTER> | < #INTEIRO> | < #REAL> | < #VAZIO>
} */
